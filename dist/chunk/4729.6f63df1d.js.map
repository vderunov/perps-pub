{"version":3,"file":"chunk/4729.6f63df1d.js","mappings":"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","sources":["webpack://@snx-v3/liquidity/../node_modules/viem/_esm/errors/version.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/errors/utils.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/errors/base.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/errors/encoding.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/data/isHex.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/data/size.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/data/trim.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/errors/data.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/data/pad.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/encoding/toHex.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/encoding/toBytes.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/encoding/fromHex.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/formatters/formatter.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/errors/address.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/lru.js","webpack://@snx-v3/liquidity/../node_modules/@noble/hashes/esm/_assert.js","webpack://@snx-v3/liquidity/../node_modules/@noble/hashes/esm/_u64.js","webpack://@snx-v3/liquidity/../node_modules/@noble/hashes/esm/utils.js","webpack://@snx-v3/liquidity/../node_modules/@noble/hashes/esm/sha3.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/hash/keccak256.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/address/getAddress.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/address/isAddress.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/data/concat.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/errors/cursor.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/cursor.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/constants/unit.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/unit/formatUnits.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/unit/formatGwei.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/errors/transaction.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/errors/chain.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/errors/node.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/data/slice.js","webpack://@snx-v3/liquidity/../node_modules/viem/_esm/utils/formatters/transactionRequest.js"],"sourcesContent":["export const version = '2.12.0';\n//# sourceMappingURL=version.js.map","import { version } from './version.js';\nexport const getContractAddress = (address) => address;\nexport const getUrl = (url) => url;\nexport const getVersion = () => `viem@${version}`;\n//# sourceMappingURL=utils.js.map","import { getVersion } from './utils.js';\nexport class BaseError extends Error {\n    constructor(shortMessage, args = {}) {\n        super();\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metaMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ViemError'\n        });\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getVersion()\n        });\n        const details = args.cause instanceof BaseError\n            ? args.cause.details\n            : args.cause?.message\n                ? args.cause.message\n                : args.details;\n        const docsPath = args.cause instanceof BaseError\n            ? args.cause.docsPath || args.docsPath\n            : args.docsPath;\n        this.message = [\n            shortMessage || 'An error occurred.',\n            '',\n            ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n            ...(docsPath\n                ? [\n                    `Docs: https://viem.sh${docsPath}${args.docsSlug ? `#${args.docsSlug}` : ''}`,\n                ]\n                : []),\n            ...(details ? [`Details: ${details}`] : []),\n            `Version: ${this.version}`,\n        ].join('\\n');\n        if (args.cause)\n            this.cause = args.cause;\n        this.details = details;\n        this.docsPath = docsPath;\n        this.metaMessages = args.metaMessages;\n        this.shortMessage = shortMessage;\n    }\n    walk(fn) {\n        return walk(this, fn);\n    }\n}\nfunction walk(err, fn) {\n    if (fn?.(err))\n        return err;\n    if (err && typeof err === 'object' && 'cause' in err)\n        return walk(err.cause, fn);\n    return fn ? null : err;\n}\n//# sourceMappingURL=base.js.map","import { BaseError } from './base.js';\nexport class IntegerOutOfRangeError extends BaseError {\n    constructor({ max, min, signed, size, value, }) {\n        super(`Number \"${value}\" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntegerOutOfRangeError'\n        });\n    }\n}\nexport class InvalidBytesBooleanError extends BaseError {\n    constructor(bytes) {\n        super(`Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidBytesBooleanError'\n        });\n    }\n}\nexport class InvalidHexBooleanError extends BaseError {\n    constructor(hex) {\n        super(`Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidHexBooleanError'\n        });\n    }\n}\nexport class InvalidHexValueError extends BaseError {\n    constructor(value) {\n        super(`Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidHexValueError'\n        });\n    }\n}\nexport class SizeOverflowError extends BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SizeOverflowError'\n        });\n    }\n}\n//# sourceMappingURL=encoding.js.map","export function isHex(value, { strict = true } = {}) {\n    if (!value)\n        return false;\n    if (typeof value !== 'string')\n        return false;\n    return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x');\n}\n//# sourceMappingURL=isHex.js.map","import { isHex } from './isHex.js';\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value) {\n    if (isHex(value, { strict: false }))\n        return Math.ceil((value.length - 2) / 2);\n    return value.length;\n}\n//# sourceMappingURL=size.js.map","export function trim(hexOrBytes, { dir = 'left' } = {}) {\n    let data = typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes;\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    if (typeof hexOrBytes === 'string') {\n        if (data.length === 1 && dir === 'right')\n            data = `${data}0`;\n        return `0x${data.length % 2 === 1 ? `0${data}` : data}`;\n    }\n    return data;\n}\n//# sourceMappingURL=trim.js.map","import { BaseError } from './base.js';\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \"${offset}\" is out-of-bounds (size: ${size}).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SliceOffsetOutOfBoundsError'\n        });\n    }\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SizeExceedsPaddingSizeError'\n        });\n    }\n}\nexport class InvalidBytesLengthError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidBytesLengthError'\n        });\n    }\n}\n//# sourceMappingURL=data.js.map","import { SizeExceedsPaddingSizeError, } from '../../errors/data.js';\nexport function pad(hexOrBytes, { dir, size = 32 } = {}) {\n    if (typeof hexOrBytes === 'string')\n        return padHex(hexOrBytes, { dir, size });\n    return padBytes(hexOrBytes, { dir, size });\n}\nexport function padHex(hex_, { dir, size = 32 } = {}) {\n    if (size === null)\n        return hex_;\n    const hex = hex_.replace('0x', '');\n    if (hex.length > size * 2)\n        throw new SizeExceedsPaddingSizeError({\n            size: Math.ceil(hex.length / 2),\n            targetSize: size,\n            type: 'hex',\n        });\n    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;\n}\nexport function padBytes(bytes, { dir, size = 32 } = {}) {\n    if (size === null)\n        return bytes;\n    if (bytes.length > size)\n        throw new SizeExceedsPaddingSizeError({\n            size: bytes.length,\n            targetSize: size,\n            type: 'bytes',\n        });\n    const paddedBytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n        const padEnd = dir === 'right';\n        paddedBytes[padEnd ? i : size - i - 1] =\n            bytes[padEnd ? i : bytes.length - i - 1];\n    }\n    return paddedBytes;\n}\n//# sourceMappingURL=pad.js.map","import { IntegerOutOfRangeError, } from '../../errors/encoding.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex\n * - Example: https://viem.sh/docs/utilities/toHex#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToHex(value, opts);\n    if (typeof value === 'string') {\n        return stringToHex(value, opts);\n    }\n    if (typeof value === 'boolean')\n        return boolToHex(value, opts);\n    return bytesToHex(value, opts);\n}\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value, opts = {}) {\n    const hex = `0x${Number(value)}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value, opts = {}) {\n    let string = '';\n    for (let i = 0; i < value.length; i++) {\n        string += hexes[value[i]];\n    }\n    const hex = `0x${string}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { dir: 'right', size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(value_, opts = {}) {\n    const { signed, size } = opts;\n    const value = BigInt(value_);\n    let maxValue;\n    if (size) {\n        if (signed)\n            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n        else\n            maxValue = 2n ** (BigInt(size) * 8n) - 1n;\n    }\n    else if (typeof value_ === 'number') {\n        maxValue = BigInt(Number.MAX_SAFE_INTEGER);\n    }\n    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;\n    if ((maxValue && value > maxValue) || value < minValue) {\n        const suffix = typeof value_ === 'bigint' ? 'n' : '';\n        throw new IntegerOutOfRangeError({\n            max: maxValue ? `${maxValue}${suffix}` : undefined,\n            min: `${minValue}${suffix}`,\n            signed,\n            size,\n            value: `${value_}${suffix}`,\n        });\n    }\n    const hex = `0x${(signed && value < 0\n        ? (1n << BigInt(size * 8)) + BigInt(value)\n        : value).toString(16)}`;\n    if (size)\n        return pad(hex, { size });\n    return hex;\n}\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_, opts = {}) {\n    const value = encoder.encode(value_);\n    return bytesToHex(value, opts);\n}\n//# sourceMappingURL=toHex.js.map","import { BaseError } from '../../errors/base.js';\nimport { isHex } from '../data/isHex.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nimport { numberToHex, } from './toHex.js';\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes\n * - Example: https://viem.sh/docs/utilities/toBytes#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToBytes(value, opts);\n    if (typeof value === 'boolean')\n        return boolToBytes(value, opts);\n    if (isHex(value))\n        return hexToBytes(value, opts);\n    return stringToBytes(value, opts);\n}\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value, opts = {}) {\n    const bytes = new Uint8Array(1);\n    bytes[0] = Number(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { size: opts.size });\n    }\n    return bytes;\n}\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n    zero: 48,\n    nine: 57,\n    A: 65,\n    F: 70,\n    a: 97,\n    f: 102,\n};\nfunction charCodeToBase16(char) {\n    if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n        return char - charCodeMap.zero;\n    if (char >= charCodeMap.A && char <= charCodeMap.F)\n        return char - (charCodeMap.A - 10);\n    if (char >= charCodeMap.a && char <= charCodeMap.f)\n        return char - (charCodeMap.a - 10);\n    return undefined;\n}\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = pad(hex, { dir: 'right', size: opts.size });\n    }\n    let hexString = hex.slice(2);\n    if (hexString.length % 2)\n        hexString = `0${hexString}`;\n    const length = hexString.length / 2;\n    const bytes = new Uint8Array(length);\n    for (let index = 0, j = 0; index < length; index++) {\n        const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++));\n        const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++));\n        if (nibbleLeft === undefined || nibbleRight === undefined) {\n            throw new BaseError(`Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`);\n        }\n        bytes[index] = nibbleLeft * 16 + nibbleRight;\n    }\n    return bytes;\n}\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(value, opts) {\n    const hex = numberToHex(value, opts);\n    return hexToBytes(hex);\n}\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(value, opts = {}) {\n    const bytes = encoder.encode(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { dir: 'right', size: opts.size });\n    }\n    return bytes;\n}\n//# sourceMappingURL=toBytes.js.map","import { InvalidHexBooleanError, SizeOverflowError, } from '../../errors/encoding.js';\nimport { size as size_ } from '../data/size.js';\nimport { trim } from '../data/trim.js';\nimport { hexToBytes } from './toBytes.js';\nexport function assertSize(hexOrBytes, { size }) {\n    if (size_(hexOrBytes) > size)\n        throw new SizeOverflowError({\n            givenSize: size_(hexOrBytes),\n            maxSize: size,\n        });\n}\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex\n * - Example: https://viem.sh/docs/utilities/fromHex#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex(hex, toOrOpts) {\n    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;\n    const to = opts.to;\n    if (to === 'number')\n        return hexToNumber(hex, opts);\n    if (to === 'bigint')\n        return hexToBigInt(hex, opts);\n    if (to === 'string')\n        return hexToString(hex, opts);\n    if (to === 'boolean')\n        return hexToBool(hex, opts);\n    return hexToBytes(hex, opts);\n}\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex, opts = {}) {\n    const { signed } = opts;\n    if (opts.size)\n        assertSize(hex, { size: opts.size });\n    const value = BigInt(hex);\n    if (!signed)\n        return value;\n    const size = (hex.length - 2) / 2;\n    const max = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n    if (value <= max)\n        return value;\n    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;\n}\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = trim(hex);\n    }\n    if (trim(hex) === '0x00')\n        return false;\n    if (trim(hex) === '0x01')\n        return true;\n    throw new InvalidHexBooleanError(hex);\n}\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex, opts = {}) {\n    return Number(hexToBigInt(hex, opts));\n}\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex, opts = {}) {\n    let bytes = hexToBytes(hex);\n    if (opts.size) {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes, { dir: 'right' });\n    }\n    return new TextDecoder().decode(bytes);\n}\n//# sourceMappingURL=fromHex.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n    constructor({ address }) {\n        super(`Address \"${address}\" is invalid.`, {\n            metaMessages: [\n                '- Address must be a hex value of 20 bytes (40 hex characters).',\n                '- Address must match its checksum counterpart.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAddressError'\n        });\n    }\n}\n//# sourceMappingURL=address.js.map","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize)\n            this.delete(this.keys().next().value);\n        return this;\n    }\n}\n//# sourceMappingURL=lru.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { keccak_256 } from '@noble/hashes/sha3';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function keccak256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = keccak_256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=keccak256.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { stringToBytes, } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { LruMap } from '../lru.js';\nimport { isAddress } from './isAddress.js';\nexport const checksumAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function checksumAddress(address_, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (checksumAddressCache.has(`${address_}.${chainId}`))\n        return checksumAddressCache.get(`${address_}.${chainId}`);\n    const hexAddress = chainId\n        ? `${chainId}${address_.toLowerCase()}`\n        : address_.substring(2).toLowerCase();\n    const hash = keccak256(stringToBytes(hexAddress), 'bytes');\n    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n    for (let i = 0; i < 40; i += 2) {\n        if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n            address[i] = address[i].toUpperCase();\n        }\n        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n            address[i + 1] = address[i + 1].toUpperCase();\n        }\n    }\n    const result = `0x${address.join('')}`;\n    checksumAddressCache.set(`${address_}.${chainId}`, result);\n    return result;\n}\nexport function getAddress(address, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (!isAddress(address, { strict: false }))\n        throw new InvalidAddressError({ address });\n    return checksumAddress(address, chainId);\n}\n//# sourceMappingURL=getAddress.js.map","import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\nexport const isAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function isAddress(address, options) {\n    const { strict = true } = options ?? {};\n    if (isAddressCache.has(address))\n        return isAddressCache.get(address);\n    const result = (() => {\n        if (!addressRegex.test(address))\n            return false;\n        if (address.toLowerCase() === address)\n            return true;\n        if (strict)\n            return checksumAddress(address) === address;\n        return true;\n    })();\n    isAddressCache.set(address, result);\n    return result;\n}\n//# sourceMappingURL=isAddress.js.map","export function concat(values) {\n    if (typeof values[0] === 'string')\n        return concatHex(values);\n    return concatBytes(values);\n}\nexport function concatBytes(values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const arr of values) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\nexport function concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n//# sourceMappingURL=concat.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NegativeOffsetError'\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PositionOutOfBoundsError'\n        });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RecursiveReadLimitExceededError'\n        });\n    }\n}\n//# sourceMappingURL=cursor.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","export const etherUnits = {\n    gwei: 9,\n    wei: 18,\n};\nexport const gweiUnits = {\n    ether: -9,\n    wei: 9,\n};\nexport const weiUnits = {\n    ether: -18,\n    gwei: -9,\n};\n//# sourceMappingURL=unit.js.map","/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value, decimals) {\n    let display = value.toString();\n    const negative = display.startsWith('-');\n    if (negative)\n        display = display.slice(1);\n    display = display.padStart(decimals, '0');\n    let [integer, fraction] = [\n        display.slice(0, display.length - decimals),\n        display.slice(display.length - decimals),\n    ];\n    fraction = fraction.replace(/(0+)$/, '');\n    return `${negative ? '-' : ''}${integer || '0'}${fraction ? `.${fraction}` : ''}`;\n}\n//# sourceMappingURL=formatUnits.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeConflictError'\n        });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidLegacyVError'\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializableTransactionError'\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionType'\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionError'\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidStorageKeySizeError'\n        });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionExecutionError'\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionNotFoundError'\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionReceiptNotFoundError'\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WaitForTransactionReceiptTimeoutError'\n        });\n    }\n}\n//# sourceMappingURL=transaction.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainDoesNotSupportContract'\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainMismatchError'\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainNotFoundError'\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ClientChainNotConfiguredError'\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidChainIdError'\n        });\n    }\n}\n//# sourceMappingURL=chain.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ExecutionRevertedError'\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooHigh'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooLow'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooHighError'\n        });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooLowError'\n        });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceMaxValueError'\n        });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InsufficientFundsError'\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooHighError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooLowError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionTypeNotSupportedError'\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TipAboveFeeCapError'\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownNodeError'\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","import { SliceOffsetOutOfBoundsError, } from '../../errors/data.js';\nimport { isHex } from './isHex.js';\nimport { size } from './size.js';\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice(value, start, end, { strict } = {}) {\n    if (isHex(value, { strict: false }))\n        return sliceHex(value, start, end, {\n            strict,\n        });\n    return sliceBytes(value, start, end, {\n        strict,\n    });\n}\nfunction assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n        throw new SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: size(value),\n        });\n}\nfunction assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        size(value) !== end - start) {\n        throw new SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: size(value),\n        });\n    }\n}\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = value_.slice(start, end);\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = `0x${value_\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n//# sourceMappingURL=slice.js.map","import { bytesToHex, numberToHex } from '../encoding/toHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const rpcTransactionType = {\n    legacy: '0x0',\n    eip2930: '0x1',\n    eip1559: '0x2',\n    eip4844: '0x3',\n};\nexport function formatTransactionRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.accessList !== 'undefined')\n        rpcRequest.accessList = request.accessList;\n    if (typeof request.blobVersionedHashes !== 'undefined')\n        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n    if (typeof request.blobs !== 'undefined') {\n        if (typeof request.blobs[0] !== 'string')\n            rpcRequest.blobs = request.blobs.map((x) => bytesToHex(x));\n        else\n            rpcRequest.blobs = request.blobs;\n    }\n    if (typeof request.data !== 'undefined')\n        rpcRequest.data = request.data;\n    if (typeof request.from !== 'undefined')\n        rpcRequest.from = request.from;\n    if (typeof request.gas !== 'undefined')\n        rpcRequest.gas = numberToHex(request.gas);\n    if (typeof request.gasPrice !== 'undefined')\n        rpcRequest.gasPrice = numberToHex(request.gasPrice);\n    if (typeof request.maxFeePerBlobGas !== 'undefined')\n        rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.to !== 'undefined')\n        rpcRequest.to = request.to;\n    if (typeof request.type !== 'undefined')\n        rpcRequest.type = rpcTransactionType[request.type];\n    if (typeof request.value !== 'undefined')\n        rpcRequest.value = numberToHex(request.value);\n    return rpcRequest;\n}\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter('transactionRequest', formatTransactionRequest);\n//# sourceMappingURL=transactionRequest.js.map"],"names":["getContractAddress","address","getUrl","url","BaseError","Error","constructor","shortMessage","args","super","Object","defineProperty","this","enumerable","configurable","writable","value","details","cause","message","docsPath","metaMessages","docsSlug","version","join","walk","fn","err","IntegerOutOfRangeError","max","min","signed","size","InvalidBytesBooleanError","bytes","SizeOverflowError","givenSize","maxSize","isHex","strict","test","startsWith","Math","ceil","length","trim","hexOrBytes","dir","data","replace","sliceLength","i","toString","slice","SliceOffsetOutOfBoundsError","offset","position","SizeExceedsPaddingSizeError","targetSize","type","charAt","toUpperCase","toLowerCase","InvalidBytesLengthError","pad","padHex","paddedBytes","Uint8Array","padEnd","padBytes","hex_","hex","hexes","Array","from","_v","padStart","toHex","opts","numberToHex","stringToHex","boolToHex","bytesToHex","Number","assertSize","string","value_","BigInt","maxValue","MAX_SAFE_INTEGER","minValue","suffix","undefined","encoder$1","TextEncoder","encode","encoder","toBytes$1","hexToBytes","numberToBytes","boolToBytes","stringToBytes","charCodeMap","zero","nine","A","F","a","f","charCodeToBase16","char","hexString","index","j","nibbleLeft","charCodeAt","nibbleRight","size$1","hexToBigInt","hexToNumber","defineFormatter","format","exclude","overrides","formatted","key","InvalidAddressError","LruMap","Map","set","delete","keys","next","number","n","isSafeInteger","b","lengths","includes","exists","instance","checkFinished","destroyed","finished","output","out","outputLen","U32_MASK64","_32n","fromBig","le","h","l","split","lst","Ah","Uint32Array","Al","u8a","createView","arr","DataView","buffer","byteOffset","byteLength","rotr","word","shift","toBytes","str","utf8ToBytes","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","blockLen","create","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","push","t","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","s","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","Keccak","enableXOF","rounds","pos","posOut","state","state32","floor","keccak","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","fill","keccakP","len","take","finish","writeInto","bufferOut","subarray","xofInto","xof","digestInto","destroy","to","keccak_256","gen","keccak256","to_","checksumAddressCache","checksumAddress","address_","chainId","has","get","hexAddress","substring","hash","result","addressRegex","isAddressCache","isAddress","options","concat","values","concatHex","concatBytes","reduce","acc","NegativeOffsetError","PositionOutOfBoundsError","RecursiveReadLimitExceededError","count","limit","staticCursor","dataView","ArrayBuffer","positionReadCount","recursiveReadCount","recursiveReadLimit","POSITIVE_INFINITY","assertReadLimit","assertPosition","decrementPosition","getReadCount","incrementPosition","inspectByte","position_","inspectBytes","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","pushByte","byte","pushBytes","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","_touch","readBytes","readUint8","readUint16","readUint24","readUint32","remaining","setPosition","oldPosition","createCursor","cursor","etherUnits","gwei","wei","gweiUnits","ether","formatUnits","decimals","display","negative","integer","fraction","formatGwei","unit","prettyPrint","entries","map","filter","Boolean","maxLength","FeeConflictError","InvalidLegacyVError","v","InvalidSerializableTransactionError","transaction","InvalidStorageKeySizeError","storageKey","ChainDoesNotSupportContract","blockNumber","chain","contract","name","blockCreated","ClientChainNotConfiguredError","InvalidChainIdError","ExecutionRevertedError","reason","FeeCapTooHighError","maxFeePerGas","FeeCapTooLowError","NonceTooHighError","nonce","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","gas","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","maxPriorityFeePerGas","UnknownNodeError","start","end","assertStartOffset","assertEndOffset","sliceHex","sliceBytes","rpcTransactionType","legacy","eip2930","eip1559","eip4844","formatTransactionRequest","request","rpcRequest","accessList","blobVersionedHashes","blobs","gasPrice","maxFeePerBlobGas","defineTransactionRequest"],"sourceRoot":""}