{"version":3,"file":"chunk/4553.d7e64bbb.js","mappings":"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","sources":["webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/chain/defineChain.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/chains/definitions/mainnet.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/formatter.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/transaction.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/block.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/transactionReceipt.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/log.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/op-stack/formatters.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/cursor.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/cursor.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/encoding/toRlp.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/unit.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/unit/formatUnits.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/unit/formatGwei.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/transaction.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/blobsToCommitments.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/blobsToProofs.js","webpack://@snx-v3/liquidity/../../node_modules/@noble/hashes/esm/_md.js","webpack://@snx-v3/liquidity/../../node_modules/@noble/hashes/esm/sha256.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/hash/sha256.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/blob.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/kzg.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/blob.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/toBlobSidecars.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/toBlobs.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/data/trim.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/chain.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/node.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/transaction/assertTransaction.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/transaction/serializeAccessList.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/transaction/serializeTransaction.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/transaction/getTransactionType.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/op-stack/chainConfig.js","webpack://@snx-v3/liquidity/../../op-stack/contracts.ts","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/op-stack/serializers.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/chains/definitions/optimism.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/chains/definitions/sepolia.js"],"sourcesContent":["export function defineChain(chain) {\n    return {\n        formatters: undefined,\n        fees: undefined,\n        serializers: undefined,\n        ...chain,\n    };\n}\n//# sourceMappingURL=defineChain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mainnet = /*#__PURE__*/ defineChain({\n    id: 1,\n    name: 'Ethereum',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://cloudflare-eth.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://etherscan.io',\n            apiUrl: 'https://api.etherscan.io/api',\n        },\n    },\n    contracts: {\n        ensRegistry: {\n            address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n        },\n        ensUniversalResolver: {\n            address: '0xce01f8eee7E479C928F8919abD53E553a36CeF67',\n            blockCreated: 19_258_213,\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 14_353_601,\n        },\n    },\n});\n//# sourceMappingURL=mainnet.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const transactionType = {\n    '0x0': 'legacy',\n    '0x1': 'eip2930',\n    '0x2': 'eip1559',\n    '0x3': 'eip4844',\n};\nexport function formatTransaction(transaction) {\n    const transaction_ = {\n        ...transaction,\n        blockHash: transaction.blockHash ? transaction.blockHash : null,\n        blockNumber: transaction.blockNumber\n            ? BigInt(transaction.blockNumber)\n            : null,\n        chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n        gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n        gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n        maxFeePerBlobGas: transaction.maxFeePerBlobGas\n            ? BigInt(transaction.maxFeePerBlobGas)\n            : undefined,\n        maxFeePerGas: transaction.maxFeePerGas\n            ? BigInt(transaction.maxFeePerGas)\n            : undefined,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n            ? BigInt(transaction.maxPriorityFeePerGas)\n            : undefined,\n        nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n        to: transaction.to ? transaction.to : null,\n        transactionIndex: transaction.transactionIndex\n            ? Number(transaction.transactionIndex)\n            : null,\n        type: transaction.type\n            ? transactionType[transaction.type]\n            : undefined,\n        typeHex: transaction.type ? transaction.type : undefined,\n        value: transaction.value ? BigInt(transaction.value) : undefined,\n        v: transaction.v ? BigInt(transaction.v) : undefined,\n    };\n    transaction_.yParity = (() => {\n        // If `yParity` is provided, we will use it.\n        if (transaction.yParity)\n            return Number(transaction.yParity);\n        // If no `yParity` provided, try derive from `v`.\n        if (typeof transaction_.v === 'bigint') {\n            if (transaction_.v === 0n || transaction_.v === 27n)\n                return 0;\n            if (transaction_.v === 1n || transaction_.v === 28n)\n                return 1;\n            if (transaction_.v >= 35n)\n                return transaction_.v % 2n === 0n ? 1 : 0;\n        }\n        return undefined;\n    })();\n    if (transaction_.type === 'legacy') {\n        delete transaction_.accessList;\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n        delete transaction_.yParity;\n    }\n    if (transaction_.type === 'eip2930') {\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n    }\n    if (transaction_.type === 'eip1559') {\n        delete transaction_.maxFeePerBlobGas;\n    }\n    return transaction_;\n}\nexport const defineTransaction = /*#__PURE__*/ defineFormatter('transaction', formatTransaction);\n//# sourceMappingURL=transaction.js.map","import { defineFormatter } from './formatter.js';\nimport { formatTransaction } from './transaction.js';\nexport function formatBlock(block) {\n    const transactions = block.transactions?.map((transaction) => {\n        if (typeof transaction === 'string')\n            return transaction;\n        return formatTransaction(transaction);\n    });\n    return {\n        ...block,\n        baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n        blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n        difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n        excessBlobGas: block.excessBlobGas\n            ? BigInt(block.excessBlobGas)\n            : undefined,\n        gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n        gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n        hash: block.hash ? block.hash : null,\n        logsBloom: block.logsBloom ? block.logsBloom : null,\n        nonce: block.nonce ? block.nonce : null,\n        number: block.number ? BigInt(block.number) : null,\n        size: block.size ? BigInt(block.size) : undefined,\n        timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n        transactions,\n        totalDifficulty: block.totalDifficulty\n            ? BigInt(block.totalDifficulty)\n            : null,\n    };\n}\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock);\n//# sourceMappingURL=block.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nimport { formatLog } from './log.js';\nimport { transactionType } from './transaction.js';\nexport const receiptStatuses = {\n    '0x0': 'reverted',\n    '0x1': 'success',\n};\nexport function formatTransactionReceipt(transactionReceipt) {\n    const receipt = {\n        ...transactionReceipt,\n        blockNumber: transactionReceipt.blockNumber\n            ? BigInt(transactionReceipt.blockNumber)\n            : null,\n        contractAddress: transactionReceipt.contractAddress\n            ? transactionReceipt.contractAddress\n            : null,\n        cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n            ? BigInt(transactionReceipt.cumulativeGasUsed)\n            : null,\n        effectiveGasPrice: transactionReceipt.effectiveGasPrice\n            ? BigInt(transactionReceipt.effectiveGasPrice)\n            : null,\n        gasUsed: transactionReceipt.gasUsed\n            ? BigInt(transactionReceipt.gasUsed)\n            : null,\n        logs: transactionReceipt.logs\n            ? transactionReceipt.logs.map((log) => formatLog(log))\n            : null,\n        to: transactionReceipt.to ? transactionReceipt.to : null,\n        transactionIndex: transactionReceipt.transactionIndex\n            ? hexToNumber(transactionReceipt.transactionIndex)\n            : null,\n        status: transactionReceipt.status\n            ? receiptStatuses[transactionReceipt.status]\n            : null,\n        type: transactionReceipt.type\n            ? transactionType[transactionReceipt.type] || transactionReceipt.type\n            : null,\n    };\n    if (transactionReceipt.blobGasPrice)\n        receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n    if (transactionReceipt.blobGasUsed)\n        receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n    return receipt;\n}\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter('transactionReceipt', formatTransactionReceipt);\n//# sourceMappingURL=transactionReceipt.js.map","export function formatLog(log, { args, eventName, } = {}) {\n    return {\n        ...log,\n        blockHash: log.blockHash ? log.blockHash : null,\n        blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n        logIndex: log.logIndex ? Number(log.logIndex) : null,\n        transactionHash: log.transactionHash ? log.transactionHash : null,\n        transactionIndex: log.transactionIndex\n            ? Number(log.transactionIndex)\n            : null,\n        ...(eventName ? { args, eventName } : {}),\n    };\n}\n//# sourceMappingURL=log.js.map","import { hexToBigInt } from '../utils/encoding/fromHex.js';\nimport { defineBlock } from '../utils/formatters/block.js';\nimport { defineTransaction, formatTransaction, } from '../utils/formatters/transaction.js';\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js';\nexport const formatters = {\n    block: /*#__PURE__*/ defineBlock({\n        format(args) {\n            const transactions = args.transactions?.map((transaction) => {\n                if (typeof transaction === 'string')\n                    return transaction;\n                const formatted = formatTransaction(transaction);\n                if (formatted.typeHex === '0x7e') {\n                    formatted.isSystemTx = transaction.isSystemTx;\n                    formatted.mint = transaction.mint\n                        ? hexToBigInt(transaction.mint)\n                        : undefined;\n                    formatted.sourceHash = transaction.sourceHash;\n                    formatted.type = 'deposit';\n                }\n                return formatted;\n            });\n            return {\n                transactions,\n                stateRoot: args.stateRoot,\n            };\n        },\n    }),\n    transaction: /*#__PURE__*/ defineTransaction({\n        format(args) {\n            const transaction = {};\n            if (args.type === '0x7e') {\n                transaction.isSystemTx = args.isSystemTx;\n                transaction.mint = args.mint ? hexToBigInt(args.mint) : undefined;\n                transaction.sourceHash = args.sourceHash;\n                transaction.type = 'deposit';\n            }\n            return transaction;\n        },\n    }),\n    transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n        format(args) {\n            return {\n                l1GasPrice: args.l1GasPrice ? hexToBigInt(args.l1GasPrice) : null,\n                l1GasUsed: args.l1GasUsed ? hexToBigInt(args.l1GasUsed) : null,\n                l1Fee: args.l1Fee ? hexToBigInt(args.l1Fee) : null,\n                l1FeeScalar: args.l1FeeScalar ? Number(args.l1FeeScalar) : null,\n            };\n        },\n    }),\n};\n//# sourceMappingURL=formatters.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NegativeOffsetError'\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PositionOutOfBoundsError'\n        });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RecursiveReadLimitExceededError'\n        });\n    }\n}\n//# sourceMappingURL=cursor.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","import { BaseError } from '../../errors/base.js';\nimport { createCursor, } from '../cursor.js';\nimport { hexToBytes } from './toBytes.js';\nimport { bytesToHex } from './toHex.js';\nexport function toRlp(bytes, to = 'hex') {\n    const encodable = getEncodable(bytes);\n    const cursor = createCursor(new Uint8Array(encodable.length));\n    encodable.encode(cursor);\n    if (to === 'hex')\n        return bytesToHex(cursor.bytes);\n    return cursor.bytes;\n}\nexport function bytesToRlp(bytes, to = 'bytes') {\n    return toRlp(bytes, to);\n}\nexport function hexToRlp(hex, to = 'hex') {\n    return toRlp(hex, to);\n}\nfunction getEncodable(bytes) {\n    if (Array.isArray(bytes))\n        return getEncodableList(bytes.map((x) => getEncodable(x)));\n    return getEncodableBytes(bytes);\n}\nfunction getEncodableList(list) {\n    const bodyLength = list.reduce((acc, x) => acc + x.length, 0);\n    const sizeOfBodyLength = getSizeOfLength(bodyLength);\n    const length = (() => {\n        if (bodyLength <= 55)\n            return 1 + bodyLength;\n        return 1 + sizeOfBodyLength + bodyLength;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bodyLength <= 55) {\n                cursor.pushByte(0xc0 + bodyLength);\n            }\n            else {\n                cursor.pushByte(0xc0 + 55 + sizeOfBodyLength);\n                if (sizeOfBodyLength === 1)\n                    cursor.pushUint8(bodyLength);\n                else if (sizeOfBodyLength === 2)\n                    cursor.pushUint16(bodyLength);\n                else if (sizeOfBodyLength === 3)\n                    cursor.pushUint24(bodyLength);\n                else\n                    cursor.pushUint32(bodyLength);\n            }\n            for (const { encode } of list) {\n                encode(cursor);\n            }\n        },\n    };\n}\nfunction getEncodableBytes(bytesOrHex) {\n    const bytes = typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex;\n    const sizeOfBytesLength = getSizeOfLength(bytes.length);\n    const length = (() => {\n        if (bytes.length === 1 && bytes[0] < 0x80)\n            return 1;\n        if (bytes.length <= 55)\n            return 1 + bytes.length;\n        return 1 + sizeOfBytesLength + bytes.length;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bytes.length === 1 && bytes[0] < 0x80) {\n                cursor.pushBytes(bytes);\n            }\n            else if (bytes.length <= 55) {\n                cursor.pushByte(0x80 + bytes.length);\n                cursor.pushBytes(bytes);\n            }\n            else {\n                cursor.pushByte(0x80 + 55 + sizeOfBytesLength);\n                if (sizeOfBytesLength === 1)\n                    cursor.pushUint8(bytes.length);\n                else if (sizeOfBytesLength === 2)\n                    cursor.pushUint16(bytes.length);\n                else if (sizeOfBytesLength === 3)\n                    cursor.pushUint24(bytes.length);\n                else\n                    cursor.pushUint32(bytes.length);\n                cursor.pushBytes(bytes);\n            }\n        },\n    };\n}\nfunction getSizeOfLength(length) {\n    if (length < 2 ** 8)\n        return 1;\n    if (length < 2 ** 16)\n        return 2;\n    if (length < 2 ** 24)\n        return 3;\n    if (length < 2 ** 32)\n        return 4;\n    throw new BaseError('Length is too large.');\n}\n//# sourceMappingURL=toRlp.js.map","export const etherUnits = {\n    gwei: 9,\n    wei: 18,\n};\nexport const gweiUnits = {\n    ether: -9,\n    wei: 9,\n};\nexport const weiUnits = {\n    ether: -18,\n    gwei: -9,\n};\n//# sourceMappingURL=unit.js.map","/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value, decimals) {\n    let display = value.toString();\n    const negative = display.startsWith('-');\n    if (negative)\n        display = display.slice(1);\n    display = display.padStart(decimals, '0');\n    let [integer, fraction] = [\n        display.slice(0, display.length - decimals),\n        display.slice(display.length - decimals),\n    ];\n    fraction = fraction.replace(/(0+)$/, '');\n    return `${negative ? '-' : ''}${integer || '0'}${fraction ? `.${fraction}` : ''}`;\n}\n//# sourceMappingURL=formatUnits.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeConflictError'\n        });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidLegacyVError'\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializableTransactionError'\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionType'\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionError'\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidStorageKeySizeError'\n        });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionExecutionError'\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionNotFoundError'\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionReceiptNotFoundError'\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WaitForTransactionReceiptTimeoutError'\n        });\n    }\n}\n//# sourceMappingURL=transaction.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = [];\n    for (const blob of blobs)\n        commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)));\n    return (to === 'bytes'\n        ? commitments\n        : commitments.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToCommitments.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = (typeof parameters.commitments[0] === 'string'\n        ? parameters.commitments.map((x) => hexToBytes(x))\n        : parameters.commitments);\n    const proofs = [];\n    for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n        const commitment = commitments[i];\n        proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)));\n    }\n    return (to === 'bytes'\n        ? proofs\n        : proofs.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToProofs.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { bytesToHex } from '../encoding/toHex.js';\nimport { sha256 } from '../hash/sha256.js';\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash(parameters) {\n    const { commitment, version = 1 } = parameters;\n    const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');\n    const versionedHash = sha256(commitment, 'bytes');\n    versionedHash.set([version], 0);\n    return (to === 'bytes' ? versionedHash : bytesToHex(versionedHash));\n}\n//# sourceMappingURL=commitmentToVersionedHash.js.map","import { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function sha256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = noble_sha256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** Blob limit per transaction. */\nconst blobsPerTransaction = 6;\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32;\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096;\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction -\n    // terminator byte (0x80).\n    1 -\n    // zero byte (0x00) appended to each field element.\n    1 * fieldElementsPerBlob * blobsPerTransaction;\n//# sourceMappingURL=blob.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\nexport const versionedHashVersionKzg = 1;\n//# sourceMappingURL=kzg.js.map","import { versionedHashVersionKzg } from '../constants/kzg.js';\nimport { BaseError } from './base.js';\nexport class BlobSizeTooLargeError extends BaseError {\n    constructor({ maxSize, size }) {\n        super('Blob size is too large.', {\n            metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BlobSizeTooLargeError'\n        });\n    }\n}\nexport class EmptyBlobError extends BaseError {\n    constructor() {\n        super('Blob data must not be empty.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'EmptyBlobError'\n        });\n    }\n}\nexport class InvalidVersionedHashSizeError extends BaseError {\n    constructor({ hash, size, }) {\n        super(`Versioned hash \"${hash}\" size is invalid.`, {\n            metaMessages: ['Expected: 32', `Received: ${size}`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashSizeError'\n        });\n    }\n}\nexport class InvalidVersionedHashVersionError extends BaseError {\n    constructor({ hash, version, }) {\n        super(`Versioned hash \"${hash}\" version is invalid.`, {\n            metaMessages: [\n                `Expected: ${versionedHashVersionKzg}`,\n                `Received: ${version}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashVersionError'\n        });\n    }\n}\n//# sourceMappingURL=blob.js.map","import { blobsToCommitments, } from './blobsToCommitments.js';\nimport { blobsToProofs } from './blobsToProofs.js';\nimport { toBlobs } from './toBlobs.js';\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars(parameters) {\n    const { data, kzg, to } = parameters;\n    const blobs = parameters.blobs ?? toBlobs({ data: data, to });\n    const commitments = parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg, to });\n    const proofs = parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg, to });\n    const sidecars = [];\n    for (let i = 0; i < blobs.length; i++)\n        sidecars.push({\n            blob: blobs[i],\n            commitment: commitments[i],\n            proof: proofs[i],\n        });\n    return sidecars;\n}\n//# sourceMappingURL=toBlobSidecars.js.map","import { bytesPerBlob, bytesPerFieldElement, fieldElementsPerBlob, maxBytesPerTransaction, } from '../../constants/blob.js';\nimport { BlobSizeTooLargeError, EmptyBlobError, } from '../../errors/blob.js';\nimport { createCursor } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs(parameters) {\n    const to = parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes');\n    const data = (typeof parameters.data === 'string'\n        ? hexToBytes(parameters.data)\n        : parameters.data);\n    const size_ = size(data);\n    if (!size_)\n        throw new EmptyBlobError();\n    if (size_ > maxBytesPerTransaction)\n        throw new BlobSizeTooLargeError({\n            maxSize: maxBytesPerTransaction,\n            size: size_,\n        });\n    const blobs = [];\n    let active = true;\n    let position = 0;\n    while (active) {\n        const blob = createCursor(new Uint8Array(bytesPerBlob));\n        let size = 0;\n        while (size < fieldElementsPerBlob) {\n            const bytes = data.slice(position, position + (bytesPerFieldElement - 1));\n            // Push a zero byte so the field element doesn't overflow the BLS modulus.\n            blob.pushByte(0x00);\n            // Push the current segment of data bytes.\n            blob.pushBytes(bytes);\n            // If we detect that the current segment of data bytes is less than 31 bytes,\n            // we can stop processing and push a terminator byte to indicate the end of the blob.\n            if (bytes.length < 31) {\n                blob.pushByte(0x80);\n                active = false;\n                break;\n            }\n            size++;\n            position += 31;\n        }\n        blobs.push(blob);\n    }\n    return (to === 'bytes'\n        ? blobs.map((x) => x.bytes)\n        : blobs.map((x) => bytesToHex(x.bytes)));\n}\n//# sourceMappingURL=toBlobs.js.map","export function trim(hexOrBytes, { dir = 'left' } = {}) {\n    let data = typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes;\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    if (typeof hexOrBytes === 'string') {\n        if (data.length === 1 && dir === 'right')\n            data = `${data}0`;\n        return `0x${data.length % 2 === 1 ? `0${data}` : data}`;\n    }\n    return data;\n}\n//# sourceMappingURL=trim.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainDoesNotSupportContract'\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainMismatchError'\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainNotFoundError'\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ClientChainNotConfiguredError'\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidChainIdError'\n        });\n    }\n}\n//# sourceMappingURL=chain.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ExecutionRevertedError'\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooHigh'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooLow'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooHighError'\n        });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooLowError'\n        });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceMaxValueError'\n        });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InsufficientFundsError'\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooHighError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooLowError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionTypeNotSupportedError'\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TipAboveFeeCapError'\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownNodeError'\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","import { versionedHashVersionKzg } from '../../constants/kzg.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { EmptyBlobError, InvalidVersionedHashSizeError, InvalidVersionedHashVersionError, } from '../../errors/blob.js';\nimport { InvalidChainIdError, } from '../../errors/chain.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { size } from '../data/size.js';\nimport { slice } from '../data/slice.js';\nimport { hexToNumber } from '../encoding/fromHex.js';\nexport function assertTransactionEIP4844(transaction) {\n    const { blobVersionedHashes } = transaction;\n    if (blobVersionedHashes) {\n        if (blobVersionedHashes.length === 0)\n            throw new EmptyBlobError();\n        for (const hash of blobVersionedHashes) {\n            const size_ = size(hash);\n            const version = hexToNumber(slice(hash, 0, 1));\n            if (size_ !== 32)\n                throw new InvalidVersionedHashSizeError({ hash, size: size_ });\n            if (version !== versionedHashVersionKzg)\n                throw new InvalidVersionedHashVersionError({\n                    hash,\n                    version,\n                });\n        }\n    }\n    assertTransactionEIP1559(transaction);\n}\nexport function assertTransactionEIP1559(transaction) {\n    const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\nexport function assertTransactionEIP2930(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.');\n    if (gasPrice && gasPrice > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n}\nexport function assertTransactionLegacy(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to, accessList, } = transaction;\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof chainId !== 'undefined' && chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.');\n    if (gasPrice && gasPrice > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n    if (accessList)\n        throw new BaseError('`accessList` is not a valid Legacy Transaction attribute.');\n}\n//# sourceMappingURL=assertTransaction.js.map","import { InvalidAddressError, } from '../../errors/address.js';\nimport { InvalidStorageKeySizeError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(accessList) {\n    if (!accessList || accessList.length === 0)\n        return [];\n    const serializedAccessList = [];\n    for (let i = 0; i < accessList.length; i++) {\n        const { address, storageKeys } = accessList[i];\n        for (let j = 0; j < storageKeys.length; j++) {\n            if (storageKeys[j].length - 2 !== 64) {\n                throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] });\n            }\n        }\n        if (!isAddress(address, { strict: false })) {\n            throw new InvalidAddressError({ address });\n        }\n        serializedAccessList.push([address, storageKeys]);\n    }\n    return serializedAccessList;\n}\n//# sourceMappingURL=serializeAccessList.js.map","import { InvalidLegacyVError, } from '../../errors/transaction.js';\nimport { blobsToCommitments, } from '../blob/blobsToCommitments.js';\nimport { blobsToProofs, } from '../blob/blobsToProofs.js';\nimport { commitmentsToVersionedHashes, } from '../blob/commitmentsToVersionedHashes.js';\nimport { toBlobSidecars, } from '../blob/toBlobSidecars.js';\nimport { concatHex } from '../data/concat.js';\nimport { trim } from '../data/trim.js';\nimport { bytesToHex, toHex } from '../encoding/toHex.js';\nimport { toRlp } from '../encoding/toRlp.js';\nimport { assertTransactionEIP1559, assertTransactionEIP2930, assertTransactionEIP4844, assertTransactionLegacy, } from './assertTransaction.js';\nimport { getTransactionType, } from './getTransactionType.js';\nimport { serializeAccessList, } from './serializeAccessList.js';\nexport function serializeTransaction(transaction, signature) {\n    const type = getTransactionType(transaction);\n    if (type === 'eip1559')\n        return serializeTransactionEIP1559(transaction, signature);\n    if (type === 'eip2930')\n        return serializeTransactionEIP2930(transaction, signature);\n    if (type === 'eip4844')\n        return serializeTransactionEIP4844(transaction, signature);\n    return serializeTransactionLegacy(transaction, signature);\n}\nfunction serializeTransactionEIP4844(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP4844(transaction);\n    let blobVersionedHashes = transaction.blobVersionedHashes;\n    let sidecars = transaction.sidecars;\n    // If `blobs` are passed, we will need to compute the KZG commitments & proofs.\n    if (transaction.blobs &&\n        (typeof blobVersionedHashes === 'undefined' ||\n            typeof sidecars === 'undefined')) {\n        const blobs = (typeof transaction.blobs[0] === 'string'\n            ? transaction.blobs\n            : transaction.blobs.map((x) => bytesToHex(x)));\n        const kzg = transaction.kzg;\n        const commitments = blobsToCommitments({\n            blobs,\n            kzg,\n        });\n        if (typeof blobVersionedHashes === 'undefined')\n            blobVersionedHashes = commitmentsToVersionedHashes({\n                commitments,\n            });\n        if (typeof sidecars === 'undefined') {\n            const proofs = blobsToProofs({ blobs, commitments, kzg });\n            sidecars = toBlobSidecars({ blobs, commitments, proofs });\n        }\n    }\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        maxFeePerBlobGas ? toHex(maxFeePerBlobGas) : '0x',\n        blobVersionedHashes ?? [],\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    const blobs = [];\n    const commitments = [];\n    const proofs = [];\n    if (sidecars)\n        for (let i = 0; i < sidecars.length; i++) {\n            const { blob, commitment, proof } = sidecars[i];\n            blobs.push(blob);\n            commitments.push(commitment);\n            proofs.push(proof);\n        }\n    return concatHex([\n        '0x03',\n        sidecars\n            ? // If sidecars are enabled, envelope turns into a \"wrapper\":\n                toRlp([serializedTransaction, blobs, commitments, proofs])\n            : // If sidecars are disabled, standard envelope is used:\n                toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP1559(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP1559(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x02',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP2930(transaction, signature) {\n    const { chainId, gas, data, nonce, to, value, accessList, gasPrice } = transaction;\n    assertTransactionEIP2930(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x01',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionLegacy(transaction, signature) {\n    const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction;\n    assertTransactionLegacy(transaction);\n    let serializedTransaction = [\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n    ];\n    if (signature) {\n        const v = (() => {\n            // EIP-155 (inferred chainId)\n            if (signature.v >= 35n) {\n                const inferredChainId = (signature.v - 35n) / 2n;\n                if (inferredChainId > 0)\n                    return signature.v;\n                return 27n + (signature.v === 35n ? 0n : 1n);\n            }\n            // EIP-155 (explicit chainId)\n            if (chainId > 0)\n                return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);\n            // Pre-EIP-155 (no chainId)\n            const v = 27n + (signature.v === 27n ? 0n : 1n);\n            if (signature.v !== v)\n                throw new InvalidLegacyVError({ v: signature.v });\n            return v;\n        })();\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(v),\n            signature.r,\n            signature.s,\n        ];\n    }\n    else if (chainId > 0) {\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(chainId),\n            '0x',\n            '0x',\n        ];\n    }\n    return toRlp(serializedTransaction);\n}\nexport function toYParitySignatureArray(transaction, signature_) {\n    const signature = signature_ ?? transaction;\n    const { v, yParity } = signature;\n    if (typeof signature.r === 'undefined')\n        return [];\n    if (typeof signature.s === 'undefined')\n        return [];\n    if (typeof v === 'undefined' && typeof yParity === 'undefined')\n        return [];\n    const r = trim(signature.r);\n    const s = trim(signature.s);\n    const yParity_ = (() => {\n        if (typeof yParity === 'number')\n            return yParity ? toHex(1) : '0x';\n        if (v === 0n)\n            return '0x';\n        if (v === 1n)\n            return toHex(1);\n        return v === 27n ? '0x' : toHex(1);\n    })();\n    return [yParity_, r === '0x00' ? '0x' : r, s === '0x00' ? '0x' : s];\n}\n//# sourceMappingURL=serializeTransaction.js.map","import { InvalidSerializableTransactionError, } from '../../errors/transaction.js';\nexport function getTransactionType(transaction) {\n    if (transaction.type)\n        return transaction.type;\n    if (typeof transaction.blobs !== 'undefined' ||\n        typeof transaction.blobVersionedHashes !== 'undefined' ||\n        typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n        typeof transaction.sidecars !== 'undefined')\n        return 'eip4844';\n    if (typeof transaction.maxFeePerGas !== 'undefined' ||\n        typeof transaction.maxPriorityFeePerGas !== 'undefined') {\n        return 'eip1559';\n    }\n    if (typeof transaction.gasPrice !== 'undefined') {\n        if (typeof transaction.accessList !== 'undefined')\n            return 'eip2930';\n        return 'legacy';\n    }\n    throw new InvalidSerializableTransactionError({ transaction });\n}\n//# sourceMappingURL=getTransactionType.js.map","import { commitmentToVersionedHash, } from './commitmentToVersionedHash.js';\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes(parameters) {\n    const { commitments, version } = parameters;\n    const to = parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes');\n    const hashes = [];\n    for (const commitment of commitments) {\n        hashes.push(commitmentToVersionedHash({\n            commitment,\n            to,\n            version,\n        }));\n    }\n    return hashes;\n}\n//# sourceMappingURL=commitmentsToVersionedHashes.js.map","import { contracts } from './contracts.js';\nimport { formatters } from './formatters.js';\nimport { serializers } from './serializers.js';\nexport const chainConfig = {\n    contracts,\n    formatters,\n    serializers,\n};\n//# sourceMappingURL=chainConfig.js.map",null,"import { InvalidAddressError } from '../errors/address.js';\nimport { isAddress } from '../utils/address/isAddress.js';\nimport { concatHex } from '../utils/data/concat.js';\nimport { toHex } from '../utils/encoding/toHex.js';\nimport { toRlp } from '../utils/encoding/toRlp.js';\nimport { serializeTransaction as serializeTransaction_, } from '../utils/transaction/serializeTransaction.js';\nexport function serializeTransaction(transaction, signature) {\n    if (isDeposit(transaction))\n        return serializeTransactionDeposit(transaction);\n    return serializeTransaction_(transaction, signature);\n}\nexport const serializers = {\n    transaction: serializeTransaction,\n};\nfunction serializeTransactionDeposit(transaction) {\n    assertTransactionDeposit(transaction);\n    const { sourceHash, data, from, gas, isSystemTx, mint, to, value } = transaction;\n    const serializedTransaction = [\n        sourceHash,\n        from,\n        to ?? '0x',\n        mint ? toHex(mint) : '0x',\n        value ? toHex(value) : '0x',\n        gas ? toHex(gas) : '0x',\n        isSystemTx ? '0x1' : '0x',\n        data ?? '0x',\n    ];\n    return concatHex([\n        '0x7e',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction isDeposit(transaction) {\n    if (transaction.type === 'deposit')\n        return true;\n    if (typeof transaction.sourceHash !== 'undefined')\n        return true;\n    return false;\n}\nexport function assertTransactionDeposit(transaction) {\n    const { from, to } = transaction;\n    if (from && !isAddress(from))\n        throw new InvalidAddressError({ address: from });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n}\n//# sourceMappingURL=serializers.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const optimism = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 10,\n    name: 'OP Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.optimism.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Optimism Explorer',\n            url: 'https://optimistic.etherscan.io',\n            apiUrl: 'https://api-optimistic.etherscan.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0xe5965Ab5962eDc7477C8520243A95517CD252fA9',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xdfe97868233d1aa22e815a266982f2cf17685a27',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 4286263,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=optimism.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sepolia = /*#__PURE__*/ defineChain({\n    id: 11_155_111,\n    name: 'Sepolia',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.sepolia.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://sepolia.etherscan.io',\n            apiUrl: 'https://api-sepolia.etherscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 751532,\n        },\n        ensRegistry: { address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e' },\n        ensUniversalResolver: {\n            address: '0xc8Af999e38273D658BE1b921b88A9Ddf005769cC',\n            blockCreated: 5_317_080,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=sepolia.js.map"],"names":["defineChain","chain","formatters","undefined","fees","serializers","mainnet","id","name","nativeCurrency","symbol","decimals","rpcUrls","default","http","blockExplorers","url","apiUrl","contracts","ensRegistry","address","ensUniversalResolver","blockCreated","multicall3","defineFormatter","type","format","exclude","overrides","args","formatted","key","transactionType","formatTransaction","transaction","transaction_","blockHash","blockNumber","BigInt","chainId","gas","gasPrice","maxFeePerBlobGas","maxFeePerGas","maxPriorityFeePerGas","nonce","to","transactionIndex","Number","typeHex","value","v","yParity","accessList","defineTransaction","formatBlock","block","transactions","map","baseFeePerGas","blobGasUsed","difficulty","excessBlobGas","gasLimit","gasUsed","hash","logsBloom","number","size","timestamp","totalDifficulty","defineBlock","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","contractAddress","cumulativeGasUsed","effectiveGasPrice","logs","log","eventName","logIndex","transactionHash","formatLog","status","blobGasPrice","defineTransactionReceipt","isSystemTx","mint","sourceHash","stateRoot","l1GasPrice","l1GasUsed","l1Fee","l1FeeScalar","NegativeOffsetError","constructor","offset","super","Object","defineProperty","this","enumerable","configurable","writable","PositionOutOfBoundsError","length","position","RecursiveReadLimitExceededError","count","limit","staticCursor","bytes","Uint8Array","dataView","DataView","ArrayBuffer","positionReadCount","Map","recursiveReadCount","recursiveReadLimit","POSITIVE_INFINITY","assertReadLimit","assertPosition","decrementPosition","getReadCount","get","incrementPosition","inspectByte","position_","inspectBytes","subarray","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","pushByte","byte","pushBytes","set","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","_touch","readBytes","readUint8","readUint16","readUint24","readUint32","remaining","setPosition","oldPosition","createCursor","cursor","create","buffer","byteOffset","byteLength","toRlp","encodable","getEncodable","encode","Array","isArray","list","bodyLength","reduce","acc","x","sizeOfBodyLength","getSizeOfLength","getEncodableList","bytesOrHex","sizeOfBytesLength","getEncodableBytes","gweiUnits","ether","wei","formatUnits","display","toString","negative","startsWith","slice","padStart","integer","fraction","replace","formatGwei","unit","prettyPrint","entries","filter","Boolean","maxLength","Math","max","padEnd","join","InvalidLegacyVError","InvalidSerializableTransactionError","metaMessages","InvalidStorageKeySizeError","storageKey","floor","blobsToCommitments","parameters","kzg","blobs","commitments","blob","push","from","blobToKzgCommitment","blobsToProofs","proofs","i","commitment","computeBlobKzgProof","Maj","a","b","c","HashMD","blockLen","outputLen","padOffset","isLE","finished","pos","destroyed","view","update","data","len","take","min","process","roundClean","digestInto","out","fill","setBigUint64","_32n","_u32_max","wh","wl","h","l","oview","Error","outLen","state","digest","res","destroy","_cloneInto","SHA256_K","Uint32Array","SHA256_IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","W15","W2","s0","s1","T1","T2","sha256","commitmentToVersionedHash","version","versionedHash","to_","isHex","strict","toBytes","toHex","bytesPerFieldElement","fieldElementsPerBlob","bytesPerBlob","maxBytesPerTransaction","versionedHashVersionKzg","BlobSizeTooLargeError","maxSize","EmptyBlobError","InvalidVersionedHashSizeError","InvalidVersionedHashVersionError","toBlobSidecars","size_","active","toBlobs","sidecars","proof","trim","hexOrBytes","dir","sliceLength","InvalidChainIdError","ExecutionRevertedError","cause","message","reason","FeeCapTooHighError","FeeCapTooLowError","NonceTooHighError","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","assertTransactionEIP1559","isAddress","serializeAccessList","serializedAccessList","storageKeys","j","serializeTransaction","signature","blobVersionedHashes","getTransactionType","serializedTransaction","toYParitySignatureArray","concat","serializeTransactionEIP1559","assertTransactionEIP2930","serializeTransactionEIP2930","assertTransactionEIP4844","hashes","commitmentsToVersionedHashes","serializeTransactionEIP4844","assertTransactionLegacy","r","s","serializeTransactionLegacy","signature_","chainConfig","gasPriceOracle","l1Block","l2CrossDomainMessenger","l2Erc721Bridge","l2StandardBridge","l2ToL1MessagePasser","isDeposit","assertTransactionDeposit","serializeTransactionDeposit","sourceId","optimism","disputeGameFactory","l2OutputOracle","portal","l1StandardBridge","sepolia","testnet"],"sourceRoot":""}